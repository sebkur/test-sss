apply plugin: 'com.android.application'

def securePropertiesFile = rootProject.file("secure.properties");
def secureProperties = null
if (!securePropertiesFile.exists()) {
    println "Please add a signing configuration in " + securePropertiesFile
} else {
    secureProperties = new Properties()
    secureProperties.load(new FileInputStream(securePropertiesFile))
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "de.mobanisto.libsss"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }
    }

    signingConfigs {
        release {
            if (secureProperties != null) {
                storeFile file(secureProperties['storeFile'])
                storePassword secureProperties['storePassword']
                keyAlias secureProperties['keyAlias']
                keyPassword secureProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'net.java.dev.jna:jna:5.5.0@aar'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
